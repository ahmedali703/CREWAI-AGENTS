{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to CREWAI-AGENTS \ud83d\ude80","text":"<p>CREWAI-AGENTS is an AI-powered procurement assistant that helps businesses find, compare, and recommend products from various e-commerce websites.</p> <p>\ud83d\udd39 Uses Flask, CrewAI, and OpenAI for intelligent decision-making. \ud83d\udd39 Automates search, scraping, and procurement reporting. \ud83d\udd39 Generates detailed reports with product comparisons.  </p>"},{"location":"#quick-links","title":"\ud83d\udccc Quick Links","text":"<ul> <li>Installation</li> <li>Usage Guide</li> <li>API Reference</li> <li>Contributing</li> </ul>"},{"location":"api/","title":"API","text":"<pre><code># API Reference \ud83d\udd0c\n\nThis section provides details on all available API endpoints.\n\n---\n\n## 1\ufe0f\u20e3 Search for Products\n\n### **Endpoint**\n</code></pre> <p>POST /api/search</p> <pre><code>\n### **Description**\n\ud83d\udd39 This endpoint searches for a product and generates a procurement report.\n\n---\n\n### **Request Body**\n```json\n{\n  \"productName\": \"Laptop\",\n  \"country\": \"USA\",\n  \"resultCount\": 5\n}\n</code></pre> Parameter Type Description Required productName String The name of the product to search for. \u2705 Yes country String The target country for the search. \u2705 Yes resultCount Integer The number of product results required. \u2705 Yes"},{"location":"api/#response-example","title":"Response Example","text":"<pre><code>{\n  \"status\": \"success\",\n  \"message\": \"Report generated successfully\",\n  \"report_url\": \"/reports/procurement_report.html\"\n}\n</code></pre> Parameter Type Description status String Indicates if the request was successful. message String A message describing the result. report_url String The URL to access the generated report."},{"location":"api/#2-retrieve-a-procurement-report","title":"2\ufe0f\u20e3 Retrieve a Procurement Report","text":""},{"location":"api/#endpoint","title":"Endpoint","text":"<pre><code>GET /reports/{filename}\n</code></pre>"},{"location":"api/#description","title":"Description","text":"<p>\ud83d\udd39 Retrieves a generated procurement report by filename.</p>"},{"location":"api/#request-parameters","title":"Request Parameters","text":"Parameter Type Description Required filename String The name of the report file to retrieve. \u2705 Yes"},{"location":"api/#response","title":"Response","text":"<ul> <li>Returns the HTML file of the generated procurement report.</li> </ul>"},{"location":"api/#notes","title":"\u2705 Notes","text":"<ul> <li>The <code>/api/search</code> request must be completed successfully before retrieving a report.</li> <li>The report URL will be provided in the search response.</li> </ul> <p>Now you're all set to interact with the API! \ud83d\ude80 ```</p>"},{"location":"api/#notes-on-formatting","title":"\u2705 Notes on Formatting","text":"<ul> <li>Consistent markdown structure for easy reading.  </li> <li>Tables for parameters and response details to enhance clarity.  </li> <li>Proper code formatting for JSON request/response examples. </li> </ul> <p>\ud83d\udd25 This is ready to go! Just copy and paste it into <code>docs/api.md</code>. \ud83d\ude80</p>"},{"location":"contributing/","title":"Contributing","text":"<pre><code># Contributing Guide \ud83e\udd1d\n\nWe welcome contributions from everyone! \ud83d\ude80  \n\nIf you\u2019d like to contribute to **CREWAI-AGENTS**, follow these steps to ensure a smooth process.  \n\n---\n\n## 1\ufe0f\u20e3 Fork &amp; Clone the Repository  \n\n### **Fork the repository**  \nGo to [CREWAI-AGENTS on GitHub](https://github.com/your-username/CREWAI-AGENTS) and click the **Fork** button.  \n\n### **Clone your forked repository**  \n```bash\ngit clone https://github.com/your-username/CREWAI-AGENTS.git\ncd CREWAI-AGENTS\n</code></pre>"},{"location":"contributing/#2-create-a-new-branch","title":"2\ufe0f\u20e3 Create a New Branch","text":"<p>Before making changes, create a new branch for your work:  </p> <pre><code>git checkout -b feature-your-feature-name\n</code></pre> <p>Use a meaningful branch name, like <code>feature-api-enhancement</code> or <code>fix-typo-readme</code>.</p>"},{"location":"contributing/#3-make-your-changes-test","title":"3\ufe0f\u20e3 Make Your Changes &amp; Test","text":"<ul> <li>Implement your changes.  </li> <li>Ensure everything works correctly by running:  </li> </ul> <pre><code>python app.py\n</code></pre> <ul> <li>If modifying the API, test it using Postman or cURL.  </li> <li>If updating documentation, preview the changes with MkDocs:  </li> </ul> <pre><code>mkdocs serve\n</code></pre>"},{"location":"contributing/#4-commit-your-changes","title":"4\ufe0f\u20e3 Commit Your Changes","text":"<p>Once you're satisfied with your changes:  </p> <pre><code>git add .\ngit commit -m \"Added new feature: [describe feature here]\"\n</code></pre> <p>Make sure your commit messages are clear and descriptive.</p>"},{"location":"contributing/#5-push-create-a-pull-request","title":"5\ufe0f\u20e3 Push &amp; Create a Pull Request","text":"<p>Push your branch to GitHub:  </p> <pre><code>git push origin feature-your-feature-name\n</code></pre> <p>Go to your repository on GitHub, and click Compare &amp; pull request.  </p> <ul> <li>Provide a clear description of your changes.  </li> <li>Reference related issues if applicable.  </li> <li>Wait for review and feedback before merging.  </li> </ul>"},{"location":"contributing/#contribution-guidelines","title":"\u2705 Contribution Guidelines","text":"<p>\u2714\ufe0f Follow the existing code structure and formatting. \u2714\ufe0f Ensure API changes are well-documented in <code>api.md</code>. \u2714\ufe0f Write clear commit messages describing your changes. \u2714\ufe0f Make sure your feature does not break existing functionality. \u2714\ufe0f Respect all contributors and maintain a positive environment.  </p>"},{"location":"contributing/#thank-you-for-contributing","title":"\ud83c\udfaf Thank You for Contributing! \ud83d\ude80","text":"<p>We appreciate your effort in improving CREWAI-AGENTS. Your contributions make this project better for everyone! ```</p>"},{"location":"contributing/#notes-on-formatting","title":"\u2705 Notes on Formatting","text":"<ul> <li>Markdown structure is clean and well-organized.  </li> <li>All steps are numbered for easy follow-up.  </li> <li>Key GitHub actions (Fork, Clone, PR) are highlighted.  </li> <li>Command blocks are properly formatted.  </li> </ul> <p>\ud83d\udd25 This is ready to go! Just copy and paste it into <code>docs/contributing.md</code>. \ud83d\ude80</p>"},{"location":"installation/","title":"Installation","text":"<pre><code># Installation Guide \ud83d\udee0\ufe0f\n\nFollow these steps to set up the project locally.\n\n---\n\n 1\ufe0f\u20e3 Clone the Repository\n</code></pre> <p>git clone https://github.com/ahmedali703/CREWAI-AGENTS.git cd CREWAI-AGENTS</p> <pre><code>\n---\n\n 2\ufe0f\u20e3 Create a Virtual Environment\nFor **macOS/Linux**:\n</code></pre> <p>python -m venv ai_env source ai_env/bin/activate</p> <pre><code>\nFor **Windows**:\n</code></pre> <p>python -m venv ai_env ai_env\\Scripts\\activate</p> <pre><code>\n---\n\n 3\ufe0f\u20e3 Install Dependencies\n</code></pre> <p>pip install -r requirements.txt</p> <pre><code>\n---\n\n 4\ufe0f\u20e3 Set Up Environment Variables\nRename `.env.local.example` to `.env` and add your API keys:\n```env\nOPENAI_API_KEY=your_openai_api_key\nAGENTOPS_API_KEY=your_agentops_api_key\nTAVILY_API_KEY=your_tavily_api_key\nSCRAPEGRAPH_API_KEY=your_scrapegraph_api_key\n</code></pre> <p>5\ufe0f\u20e3 Run the Application</p> <pre><code>python app.py\n</code></pre> <p>Now, visit <code>http://localhost:5000</code> to use the API. \ud83d\ude80 ```</p>"},{"location":"installation/#notes","title":"\u2705 Notes:","text":"<ul> <li>The file follows proper markdown formatting for clarity.</li> <li>Each step is clearly separated for better readability.</li> <li>Consistent formatting for code blocks.</li> </ul> <p>\ud83d\udd25 This is ready to go! Just copy and paste it into <code>docs/installation.md</code>. \ud83d\ude80</p>"},{"location":"license/","title":"License","text":"<pre><code># License \ud83d\udcdc  \n\nThis project is licensed under the **MIT License**.  \n\nThe **MIT License** allows you to freely use, modify, distribute, and sublicense this project while providing **no warranties**.  \n\n---\n\n## \ud83d\udccc Full License Text  \n\n</code></pre> <p>MIT License</p> <p>Copyright (c) 2025 Ahmed Alsaied Ali</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <pre><code>\n---\n\n## \u2705 **Notes**\n\u2714\ufe0f **You are free to use this software for commercial and personal projects.**  \n\u2714\ufe0f **No liability or warranty is provided.**  \n\nFor more details about the MIT License, visit: [MIT License](https://opensource.org/licenses/MIT).\n</code></pre>"},{"location":"license/#notes-on-formatting","title":"\u2705 Notes on Formatting","text":"<ul> <li>Consistent markdown structure.  </li> <li>Full MIT License included for transparency.  </li> <li>Provides a link to official MIT License details.  </li> </ul> <p>\ud83d\udd25 This is ready to go! Just copy and paste it into <code>docs/license.md</code>. \ud83d\ude80</p>"},{"location":"usage/","title":"Usage","text":"<pre><code># Usage Guide \ud83d\udcd6\n\nThis guide explains how to use the API after setting up the project.\n\n---\n\n## Running the API\nOnce the server is running, you can interact with the API.\n\n---\n\n## \ud83d\udd39 1\ufe0f\u20e3 Searching for a Product\n\n### **Endpoint**\n</code></pre> <p>POST /api/search</p> <pre><code>\n### **Request Body**\n```json\n{\n  \"productName\": \"Laptop\",\n  \"country\": \"USA\",\n  \"resultCount\": 5\n}\n</code></pre>"},{"location":"usage/#response-example","title":"Response Example","text":"<pre><code>{\n  \"status\": \"success\",\n  \"message\": \"Report generated successfully\",\n  \"report_url\": \"/reports/procurement_report.html\"\n}\n</code></pre>"},{"location":"usage/#2-viewing-the-procurement-report","title":"\ud83d\udd39 2\ufe0f\u20e3 Viewing the Procurement Report","text":"<p>After executing a search request, open the <code>report_url</code> in a browser to access the generated procurement report.</p>"},{"location":"usage/#notes","title":"\u2705 Notes","text":"<ul> <li>Ensure that the API server is running before making requests.</li> <li>The <code>productName</code>, <code>country</code>, and <code>resultCount</code> fields are required in the request body.</li> <li>The <code>report_url</code> will contain the final procurement analysis.</li> </ul> <p>Now you're all set to interact with the API! \ud83d\ude80 ```</p>"},{"location":"usage/#notes-on-formatting","title":"\u2705 Notes on Formatting","text":"<ul> <li>Consistent markdown styling for clarity.  </li> <li>Proper separation of sections for readability.  </li> <li>Code blocks are formatted correctly to avoid rendering issues.  </li> </ul> <p>\ud83d\udd25 This is ready to go! Just copy and paste it into <code>docs/usage.md</code>. \ud83d\ude80</p>"}]}